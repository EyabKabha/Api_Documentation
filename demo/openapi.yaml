openapi: 3.0.2

servers:
- url: https://{AU10TIX-API-URL}
  description: URL


info:
  description:
    $ref: ./Guides/secureme.md
  title: Au10tix Service API

  x-logo:
    url: https://directory.findbiometrics.com/wp-content/uploads/2020/09/Artboard-5.png
    altText: Au10tix logo

x-tagGroups:
- name: Media
  tags:
  - external
- name: OCS Service
  tags:
  - Organizations configuration
- name: Consumers
  tags:
  - Consumers
- name: Requests
  tags:
  - Requests
- name: User
  tags:
  - User
tags:
- name: external
  description: external description
- name: Organizations configurations
  description: Organizations configurations description

x-servers:
- url: '{AU10TIX-API-URL}'
  description: URL

paths:
  /organizations/{clientOrganizationId}:
    get:
      tags:
      - Organizations configuration
      summary: Returns a JSON object with all the organizations configurations.
      x-controller: Organizations
      operationId: getOrganizationsConfigurations
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: OK
    post:
      tags:
      - Organizations configuration
      summary: Creates a JSON object with all the organizations configurations in
        all scopes.
      parameters:
      - in: path
        name: clientOrganizationId
        schema:
          type: string
        required: true
        description: Organization ID must be specified
      x-controller: Organizations
      operationId: createOrganizationsConfiguration
      x-authorizationRequired: true
      requestBody:
        description: The object will contain the changes to organizations configurations
          in all scopes.
        required: true
        content:
          application/json:
            schema:
              anyOf:
              - type: object
                title: scopes
                properties:
                  scopes:
                    type: object
                    minProperties: 1
                required: [scopes]
              - type: object
                title: ventures
                properties:
                  ventures:
                    type: object
                    minProperties: 1
                required: [ventures]
      responses:
        '200':
          description: OK
    patch:
      tags:
      - Organizations configuration
      summary: Updates a JSON object with all the organizations configurations in
        all scopes.
      x-controller: Organizations
      operationId: updateOrganizationsConfiguration
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain the changes to organizations configurations
          in all scopes.
        required: true
        content:
          application/json:
            schema:
              anyOf:
              - type: object
                title: scopes
                properties:
                  scopes:
                    type: object
                    minProperties: 1
                required: [scopes]
              - type: object
                title: ventures
                properties:
                  ventures:
                    type: object
                    minProperties: 1
                required: [ventures]
      responses:
        '200':
          description: OK
    put:
      tags:
      - Organizations configuration
      summary: Fully updates a JSON object with all the organizations configurations
        in all scopes.
      x-controller: Organizations
      operationId: fullUpdateOrganizationsConfiguration
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain the organizations configurations in all
          scopes.
        required: true
        content:
          application/json:
            schema:
              anyOf:
              - type: object
                title: scopes
                properties:
                  scopes:
                    type: object
                    minProperties: 1
                required: [scopes]
              - type: object
                title: ventures
                properties:
                  ventures:
                    type: object
                    minProperties: 1
                required: [ventures]
      responses:
        '200':
          description: OK
    delete:
      tags:
      - Organizations configuration
      summary: Deletes the organization configuration.
      x-controller: Organizations
      operationId: deleteOrganizationsConfiguration
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: OK

  /organizations/{clientOrganizationId}/ventures/{ventureId}:
    get:
      tags:
      - Organizations configuration
      summary: Returns a JSON object with all the venture’s configurations in a
        specific organization.
      x-controller: Organizations
      operationId: getOrganizationsConfigurationsVentures
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: ventureId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: OK
    post:
      tags:
      - Organizations configuration
      summary: Create the venture object.
      x-controller: Organizations
      operationId: createOrganizationsConfigurationVentures
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: ventureId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain the changes to venture's configurations
          in all scopes.
        required: true
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
      responses:
        '200':
          description: OK
    patch:
      tags:
      - Organizations configuration
      summary: Update the venture object.
      x-controller: Organizations
      operationId: updateOrganizationsConfigurationVentures
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: ventureId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain the changes to venture's configurations
          in all scopes.
        required: true
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
      responses:
        '200':
          description: OK
    put:
      tags:
      - Organizations configuration
      summary: Fully updates a JSON object with all the organizations venture’s
        configurations in all scopes.
      x-controller: Organizations
      operationId: fullUpdateOrganizationVenuteConfiguration
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: ventureId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain the organizations configurations in all
          scopes.
        required: true
        content:
          application/json:
            schema:
              anyOf:
              - type: object
                title: scopes
                properties:
                  scopes:
                    type: object
                    minProperties: 1
                required: [scopes]
              - type: object
                title: ventures
                properties:
                  ventures:
                    type: object
                    minProperties: 1
                required: [ventures]
      responses:
        '200':
          description: OK
    delete:
      tags:
      - Organizations configuration
      summary: Deletes an organization’s configuration in a specific venture.
      x-controller: Organizations
      operationId: deleteOrganizationsConfiguration_ventures
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: ventureId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: OK

  /organizations/{clientOrganizationId}/scopes/{scope}:
    get:
      tags:
      - Organizations configuration
      summary: Returns a JSON object with all the organization’s configurations
        in a specific scope. Possible URL Parameter withShared – Boolean that controls
        the shared configuration doc in the response.
      x-controller: Organizations
      operationId: getOrganizationsConfigurationsScopes
      parameters:
      - in: query
        name: withShared
        schema:
          type: boolean
          default: false
        description: Boolean that controls the shared configuration doc in the response
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: OK
    post:
      tags:
      - Organizations configuration
      summary: Returns the scope object which has been changed.
      x-controller: Organizations
      operationId: createOrganizationsConfigurationScopes
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain the changes to scopes's configurations
          in the specific organizaion.
        required: true
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
      responses:
        '200':
          description: OK
    patch:
      tags:
      - Organizations configuration
      summary: Returns the scope object which has been changed.
      x-controller: Organizations
      operationId: updateOrganizationsConfigurationScopes
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain the changes to venture's configurations
          in all scopes.
        required: true
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
      responses:
        '200':
          description: OK
    put:
      tags:
      - Organizations configuration
      summary: Get Updated Configuration and create new record with the latest version
        - Returns the scope object which has been changed.
      x-controller: Organizations
      operationId: fullUpdateOrganizationsConfiguration_scopes
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain updated configuration for the given scope.
        required: true
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
      responses:
        '200':
          description: OK
    delete:
      tags:
      - Organizations configuration
      summary: Deletes an organization’s configuration in a specific scope.
      x-controller: Organizations
      operationId: deleteOrganizationsConfiguration_scopes
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: OK

  /organizations/{clientOrganizationId}/ventures/{ventureId}/scopes/{scope}:
    get:
      tags:
      - Organizations configuration
      summary: Returns a JSON object with all the organization’s configurations
        in a specific scope. Possible URL Parameter withShared – Boolean that controls
        the shared configuration doc in the response.
      x-controller: Organizations
      operationId: getOrganizationsConfigurationsVenturesScopes
      parameters:
      - in: query
        name: withShared
        schema:
          type: boolean
          default: false
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: ventureId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: OK
    post:
      tags:
      - Organizations configuration
      summary: Returns the scope object which has been changed.
      x-controller: Organizations
      operationId: createOrganizationsConfigurationVenturesScopes
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: ventureId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain the changes to scopes's configurations
          in the specific organizaion.
        required: true
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
      responses:
        '200':
          description: OK
    patch:
      tags:
      - Organizations configuration
      summary: Returns the scope object which has been changed.
      x-controller: Organizations
      operationId: updateOrganizationsConfigurationVenturesScopes
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: ventureId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: The object will contain the changes to venture's configurations
          in all scopes.
        required: true
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
      responses:
        '200':
          description: OK
    delete:
      tags:
      - Organizations configuration
      summary: Deletes an organization’s configuration in a specific scope in a
        specific venture.
      x-controller: Organizations
      operationId: deleteOrganizationsConfiguration_ventures_scopes
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: ventureId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: OK
  /organizations/{clientOrganizationId}/assets/images:
    post:
      tags:
      - Images
      summary: Returns the image ID and URL.
      x-controller: Assets
      operationId: createImageAsset
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: A binary data representing an image.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              minProperties: 1
              properties:
                file:
                  type: string
                  format: binary
                  maxLength: 2048
            encoding:
              file:
                contentType: image/apng, image/bmp, image/gif, image/x-icon, image/jpeg,
                  image/png
      responses:
        '201':
          description: Asset created
  /scopes/{scope}:
    get:
      tags:
      - Internal
      summary: Returns a JSON object with all the organizations configurations.
      x-controller: Scopes
      operationId: getOrganizationsScopeConfigurations
      parameters:
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: withoutVentureId
        in: query
        required: false
        schema:
          type: string
          maxLength: 80
      responses:
        '200':
          description: OK
  /scopes:
    get:
      tags:
      - Internal
      summary: Returns a JSON object with all the organizations configurations.
      x-controller: Scopes
      operationId: getScopesConfigurations
      parameters:
      - name: withoutVentureId
        in: query
        required: false
        schema:
          type: string
          maxLength: 80
      - name: scope
        in: query
        required: false
        schema:
          type: array
        explode: false
        style: form
        allowReserved: true
        description: support multiple scopes separated by commas, template - ?scope=a,b,c
      responses:
        '200':
          description: OK
  /schemas:
    get:
      tags:
      - Internal
      summary: Returns a JSON object with all the scopes schema configurations.
      x-controller: Schemas
      operationId: getConfigurationSchemas
      responses:
        '200':
          description: OK
  /schemas/{scope}:
    get:
      tags:
      - Internal
      summary: Returns a JSON object with the Schema configurations within that scope.
      x-controller: Schemas
      operationId: getConfigurationSchemaByScope
      parameters:
      - name: scope
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: withShared
        in: query
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: OK
  /documentTypes:
    get:
      tags:
      - internal
      summary: Get DocumentTypes
      x-controller: DocumentProcessingController
      operationId: getDocumentTypes
      x-authorizationRequired: true
      responses:
        '200':
          description: A JSON array of DocumentTypes
          content:
            application/json:
              schema:
                type: array
  /consumers:
    get:
      tags:
      - Consumers
      summary: Get consumers
      x-controller: ConsumerController
      operationId: getConsumers
      x-authorizationRequired: true
      responses:
        '200':
          description: A JSON array of Consumer objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consumer'
      parameters:
      - name: clientOrganizationIds
        in: query
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: externalConsumerIds
        in: query
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: firstName
        in: query
        required: false
        schema:
          type: string
          maxLength: 255
      - name: lastName
        in: query
        required: false
        schema:
          type: string
          maxLength: 255
      - name: phoneNumber
        in: query
        required: false
        schema:
          type: string
          minLength: 4
          maxLength: 20
      - name: email
        in: query
        required: false
        schema:
          type: string
          format: email
      - name: createdByIds
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: createdAtFrom
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: createdAtTo
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lastModifiedFrom
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lastModifiedTo
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 1
    post:
      tags:
      - Consumers
      summary: Create new consumer
      x-controller: ConsumerController
      operationId: createConsumer
      x-authorizationRequired: true
      requestBody:
        description: Consumer object that needs to be added to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer_For_Create'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
        '405':
          description: Invalid input
    delete:
      tags:
      - Consumers
      summary: Delete consumers
      x-controller: ConsumerController
      operationId: deleteConsumers
      x-authorizationRequired: true
      parameters:
      - name: consumerIds
        in: query
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      responses:
        '200':
          description: successful operation
  /consumers/{consumerId}:
    get:
      tags:
      - Consumers
      summary: Get consumer
      x-controller: ConsumerController
      operationId: getConsumer
      x-authorizationRequired: true
      parameters:
      - name: consumerId
        in: path
        description: Consumer ID
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
        '404':
          description: Consumer not found
    patch:
      tags:
      - Consumers
      summary: Update an existing consumer
      x-controller: ConsumerController
      operationId: updateConsumer
      x-authorizationRequired: true
      parameters:
      - name: consumerId
        in: path
        description: ID of the Consumer to get
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        description: Consumer object containing updated fields and values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer_For_Update'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
        '404':
          description: Consumer not found
        '405':
          description: Validation exception
    delete:
      tags:
      - Consumers
      summary: Delete consumer
      x-controller: ConsumerController
      operationId: deleteConsumer
      x-authorizationRequired: true
      parameters:
      - name: consumerId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: successful operation
  /documentprocessingrequests:
    get:
      tags:
      - Requests
      summary: Get document processing request
      x-controller: DocumentProcessingController
      operationId: getRequests
      x-authorizationRequired: true
      parameters:
      - name: clientOrganizationIds
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: createdByType
        in: query
        schema:
          type: string
          enum:
          - api
          - user
      - name: uploadBy
        in: query
        schema:
          type: string
          enum:
          - Api
          - SecureMe
          - Console
          - MobileDemo
          - MobileDebug
      - name: capturedBy
        in: query
        schema:
          type: string
          enum:
          - MobileSDK
          - WebSDK
      - name: platforms
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Windows
            - MacOS
            - Android
            - iOS
            - UNIX
            - Linux
            maxLength: 255
      - name: createdByIds
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: consumerId
        in: query
        schema:
          type: integer
          maxLength: 255
          description: An existing consumer (this field and 'consumer' field are mutually
            exclusive), when both supplied 'consumer' is ignored
      - name: consumerIds
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: integer
            maxLength: 255
      - name: externalConsumerIds
        in: query
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: firstName
        in: query
        schema:
          type: string
          example: John
          maxLength: 255
      - name: fullName
        in: query
        schema:
          type: string
          example: John
          maxLength: 255
      - name: lastName
        in: query
        schema:
          type: string
          example: Doe
          maxLength: 255
      - name: phoneNumber
        in: query
        schema:
          type: string
          example: 123-123-123
          maxLength: 20
      - name: email
        in: query
        schema:
          type: string
          format: email
          maxLength: 255
      - name: additionalInfo
        in: query
        schema:
          type: string
          maxLength: 5000
      - name: createdAtFrom
        in: query
        schema:
          type: string
          format: date-time
      - name: createdAtTo
        in: query
        schema:
          type: string
          format: date-time
      - name: lastUpdatedAtFrom
        in: query
        schema:
          type: string
          format: date-time
      - name: lastUpdatedAtTo
        in: query
        schema:
          type: string
          format: date-time
      - name: results
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: countries
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: processingFlows
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            enum:
            - idv
            - poa
            - face2face
            - edv
            - nfc
            maxLength: 255
      - name: documentTypes
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: ids
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: integer
            maxLength: 255
      - name: externalIds
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: requestIds
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: processingResults
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: statuses
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: sessionIds
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: desktopToMobileFlows
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: page
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: string
      - name: limit
        in: query
        style: form
        explode: false
        allowReserved: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Request'
        '405':
          description: Invalid input
    post:
      tags:
      - Requests
      summary: Create new document processing request
      x-controller: DocumentProcessingController
      operationId: createRequest
      x-authorizationRequired: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request_For_Create'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
        '405':
          description: Invalid input
    patch:
      tags:
      - Requests
      summary: Begin BOS Processing Requests And Updating deleteAt field
      x-controller: DocumentProcessingController
      operationId: handleProcessingSubmittingRequest
      x-authorizationRequired: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Expect data to be sent
              type: object
              properties:
                id:
                  type: string
                sessionId:
                  type: string
                desktopToMobileFlow:
                  type: boolean
                  description: indicates that the request was submitted in a mobile
                    device after redirect from desktop flow (e.g. qr code)
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input
  /documentprocessingrequests/{requestId}:
    get:
      tags:
      - Requests
      summary: Get document processing request
      x-controller: DocumentProcessingController
      operationId: getRequest
      x-authorizationRequired: true
      parameters:
      - name: requestId
        description: The requestId is one of CM Id / External Id / BOS requestId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      - name: imageType
        description: The imageType to return the images (url or base64)
        in: query
        required: false
        schema:
          type: string
          enum: [base64, url]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request'
    delete:
      tags:
      - Requests
      summary: Delete request
      x-controller: DocumentProcessingController
      operationId: deleteDocumentProcessingRequestById
      x-authorizationRequired: true
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: successful operation
        '500':
          description: failed operation
  /applications/{clientOrganizationId}:
    get:
      tags:
      - Application
      summary: Get application API access details
      x-controller: AdminController
      operationId: getApplication
      x-authorizationRequired: true
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '500':
          description: failed operation
        '404':
          description: not found
    patch:
      tags:
      - Application
      summary: Add a new public key
      x-controller: AdminController
      operationId: addPublicKey
      x-authorizationRequired: true
      parameters:
      - name: clientOrganizationId
        in: path
        required: true
        schema:
          type: string
          maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keyId:
                  type: string
                publicKey:
                  type: string
      responses:
        '200':
          description: successful operation
        '500':
          description: failed operation
        '404':
          description: not found
  /media:
    post:
      tags:
      - external
      summary: Create sasTokenUri for uploading media assets
      x-controller: MediaController
      operationId: prepareUploadImage
      x-authorizationRequired: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Media_Assets'
      responses:
        '200':
          description: successful operation
  /user/preference:
    put:
      tags:
      - User
      summary: Create new user preference in the db
      x-controller: UserController
      operationId: setPreference
      x-authorizationRequired: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_Preference'
      responses:
        '201':
          description: successful insert operation
        '200':
          description: successful update operation
    get:
      tags:
      - User
      summary: Get user preference
      x-controller: UserController
      operationId: getPreference
      x-authorizationRequired: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_Preference'
        '500':
          description: failed operation
        '404':
          description: not found

  /v1/attachments:
    put:
      summary: Update assets status in body
      tags:
      - internal-only
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_attachments'
      parameters:
      - name: internalTokenExpiration
        in: query
        description: The token expiration time that will be used in case of internal
          request.
        schema:
          type: integer
      responses:
        '200':
          description: OK
        5XX:
          description: unexpected error
    post:
      summary: Create bulk new attachments for assets
      tags:
      - internal-only
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_attachment'
      responses:
        '200':
          description: attachment response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/attachments_response'
        '403':
          description: the request is forbidden
        '409':
          description: There is a conflict with the current request
        5XX:
          description: unexpected error
  /v1/assets:
    get:
      summary: Get assets based on filters
      tags:
      - internal-only
      parameters:
      - name: withInternalTypes
        in: query
        description: If the response should return internal types (default true)
        schema:
          type: boolean
          default: true
      - name: internalTokenExpiration
        in: query
        description: The token expiration time that will be used in case of internal
          request.
        schema:
          type: integer
      - name: getUnsafeAssets
        in: query
        description: Flag for getting unsafe assets in internal request
        schema:
          type: boolean
      - name: processedBy
        in: query
        description: filter assets based on processedBy
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            enum: [original, bos, cdr]
          default: [bos, cdr]
      - name: organizationId
        in: query
        description: fetch assets for organizationId
        schema:
          type: integer
          format: int64
      - name: ventureIds
        in: query
        description: assets ventureIds to fetch
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          type: integer
          format: int64
          default: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int64
          default: 50
      - name: sessionIds
        in: query
        description: assets sessionIds to fetch
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 255
      - name: statuses
        in: query
        description: assets statuses to fetch
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            maxLength: 80
      - name: updatedAtTo
        in: query
        description: fetch assets until this date time
        schema:
          type: string
      - name: withAttachments
        in: query
        description: if should fetch sessions with attachments data
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: sessions response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessions_response'
        '404':
          description: assets where not found
        5XX:
          description: unexpected error
    put:
      summary: Update assets status in body
      tags:
      - internal-only
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_assets'
      parameters:
      - name: internalTokenExpiration
        in: query
        description: The token expiration time that will be used in case of internal
          request.
        schema:
          type: integer
      responses:
        '200':
          description: OK
        5XX:
          description: unexpected error
    delete:
      summary: delete list of assets based on organizationIds and sessionIds
      tags:
      - internal-only
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete_sessions'
      responses:
        '200':
          description: OK
  /v1/assets/organization/{organizationId}/sessions/{sessionId}:
    get:
      summary: Get assets using organizationId and sessionId
      tags:
      - external
      parameters:
      - name: withInternalTypes
        in: query
        description: If the response should return internal types (default true)
        schema:
          type: boolean
          default: true
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      - name: sessionId
        required: true
        in: path
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-]*$
          maxLength: 255
      - name: internalTokenExpiration
        in: query
        description: The token expiration time that will be used in case of internal
          request.
        schema:
          type: integer
      - name: getUnsafeAssets
        in: query
        description: Flag for getting unsafe assets in internal request
        schema:
          type: boolean
      - name: processedBy
        in: query
        description: filter assets based on processedBy
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            enum: [original, bos, cdr]
          default: [bos, cdr]
      - name: inBase64
        in: query
        description: If should return the file in base 64
        schema:
          type: boolean
      responses:
        '200':
          description: session response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_response'
        '404':
          description: assets where not found
        5XX:
          description: unexpected error
    post:
      summary: Create SASTokens for uploading new assets using organizationId and
        sessionId
      tags:
      - internal-only
      parameters:
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      - name: sessionId
        required: true
        in: path
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-]*$
          maxLength: 255
      - name: internalTokenExpiration
        in: query
        description: The token expiration time that will be used in case of internal
          request.
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_asset'
      responses:
        '200':
          description: session response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_response'
        '403':
          description: the request is forbidden
        '409':
          description: There is a conflict with the current request
        5XX:
          description: unexpected error
    delete:
      summary: delete assets based on organizationId and sessionId
      tags:
      - external
      parameters:
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      - name: sessionId
        required: true
        in: path
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-]*$
          maxLength: 255
      responses:
        '200':
          description: OK
  /v1/assets/organization/{organizationId}/venture/{ventureId}/sessions/{sessionId}:
    get:
      summary: Get assets using organizationId, ventureId and sessionId
      tags:
      - external
      parameters:
      - name: withInternalTypes
        in: query
        description: If the response should return internal types (default true)
        schema:
          type: boolean
          default: true
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      - name: ventureId
        required: true
        in: path
        schema:
          type: string
      - name: sessionId
        required: true
        in: path
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-]*$
          maxLength: 255
      - name: internalTokenExpiration
        in: query
        description: The token expiration time that will be used in case of internal
          request.
        schema:
          type: integer
      - name: getUnsafeAssets
        in: query
        description: Flag for getting unsafe assets in internal request
        schema:
          type: boolean
      - name: processedBy
        in: query
        description: filter assets based on processedBy
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            enum: [original, bos, cdr]
          default: [bos, cdr]
      - name: inBase64
        in: query
        description: If should return the file in base 64
        schema:
          type: boolean
      responses:
        '200':
          description: session response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_response'
        '404':
          description: assets where not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessions_response_error'
        5XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessions_unexpected_error'
    post:
      summary: Create SASTokens for uploading new assets using organizationId, ventureId
        and sessionId
      tags:
      - internal-only
      parameters:
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      - name: ventureId
        required: true
        in: path
        schema:
          type: string
      - name: sessionId
        required: true
        in: path
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-]*$
          maxLength: 255
      - name: internalTokenExpiration
        in: query
        description: The token expiration time that will be used in case of internal
          request.
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_asset'
      responses:
        '200':
          description: session response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_response'
        '403':
          description: the request is forbidden
        '409':
          description: There is a conflict with the current request
        5XX:
          description: unexpected error
    delete:
      summary: delete assets based on organizationId, ventureId and sessionId
      tags:
      - external
      parameters:
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      - name: ventureId
        required: true
        in: path
        schema:
          type: string
      - name: sessionId
        required: true
        in: path
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-]*$
          maxLength: 255
      responses:
        '200':
          description: OK
  /v1/assets/organization/{organizationId}/sessions/{sessionId}/types/{type}:
    get:
      summary: Get assets using organizationId, sessionId and type
      tags:
      - external
      parameters:
      - name: withInternalTypes
        in: query
        description: If the response should return internal types (default true)
        schema:
          type: boolean
          default: true
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      - name: sessionId
        required: true
        in: path
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-]*$
          maxLength: 255
      - name: type
        required: true
        in: path
        schema:
          type: string
          maxLength: 255
      - name: internalTokenExpiration
        in: query
        description: The token expiration time that will be used in case of internal
          request.
        schema:
          type: integer
      - name: getUnsafeAssets
        in: query
        description: Flag for getting unsafe assets in internal request
        schema:
          type: boolean
      - name: processedBy
        in: query
        description: filter assets based on processedBy
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            enum: [original, bos, cdr]
          default: [bos, cdr]
      - name: inBase64
        in: query
        description: If should return the file in base 64
        schema:
          type: boolean
      responses:
        '200':
          description: session response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_response'
        '404':
          description: assets where not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessions_response_error'
        5XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessions_unexpected_error'
  /v1/assets/organization/{organizationId}/venture/{ventureId}/sessions/{sessionId}/types/{type}:
    get:
      summary: Get assets using organizationId, ventureId, sessionId and type
      tags:
      - external
      parameters:
      - name: withInternalTypes
        in: query
        description: If the response should return internal types (default true)
        schema:
          type: boolean
          default: true
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      - name: ventureId
        required: true
        in: path
        schema:
          type: string
      - name: sessionId
        required: true
        in: path
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-]*$
          maxLength: 255
      - name: type
        required: true
        in: path
        schema:
          type: string
          maxLength: 255
      - name: internalTokenExpiration
        in: query
        description: The token expiration time that will be used in case of internal
          request.
        schema:
          type: integer
      - name: getUnsafeAssets
        in: query
        description: Flag for getting unsafe assets in internal request
        schema:
          type: boolean
      - name: processedBy
        in: query
        description: filter assets based on processedBy
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            enum: [original, bos, cdr]
          default: [bos, cdr]
      - name: inBase64
        in: query
        description: If should return the file in base 64
        schema:
          type: boolean
      responses:
        '200':
          description: session response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_response'
        '404':
          description: assets where not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessions_response_error'
        5XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessions_unexpected_error'
  /v1/maintenance:
    delete:
      summary: delete all assets that exceeded the retention period
      tags:
      - internal-only
      responses:
        '200':
          description: OK

  /v1/policies/organization/{organizationId}:
    put:
      summary: Change policy configuration for organization
      tags:
      - internal-only
      parameters:
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/change_policy'
      responses:
        '200':
          description: OK
  /v1/policies/organization/{organizationId}/venture/{ventureId}:
    put:
      summary: Change policy configuration for organization and venture
      tags:
      - internal-only
      parameters:
      - name: organizationId
        required: true
        in: path
        schema:
          type: integer
      - name: ventureId
        required: true
        in: path
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/change_policy'
      responses:
        '200':
          description: OK


components:
  schemas:
    User_Preference:
      description: User preference
      type: object
    Create_Media_Asset:
      description: The asset to create in media service
      type: object
      properties:
        type:
          type: string
          enum: [page0, page1, ff1, ff2, supp, barcode, chip, edv, iddata, pdata,
            photo, sdp]
        mimeType:
          type: string
      required:
      - type
    Create_Media_Assets:
      description: The assets to create in media service
      type: object
      properties:
        requestId:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/Create_Media_Asset'
      required:
      - requestId
      - assets
    Consumer_For_Update:
      description: The updatable part of a consumer object
      type: object
      properties:
        firstName:
          type: string
          example: John
          maxLength: 255
        lastName:
          type: string
          example: Doe
          maxLength: 255
        phoneNumber:
          type: string
          example: 123-123-123
          maxLength: 20
        email:
          type: string
          format: email
        additionalInfo:
          type: string
          maxLength: 5000
    Consumer_For_Create:
      description: A Consumer object for the create (POST) action
      allOf:
      - type: object
        properties:
          clientOrganizationId:
            type: string
            maxLength: 255
          createdById:
            type: string
            maxLength: 255
          externalConsumerId:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Consumer_For_Update'
    Consumer:
      description: A Consumer object
      allOf:
      - $ref: '#/components/schemas/Consumer_For_Create'
      - type: object
        properties:
          id:
            type: string
            maxLength: 255
          createdAt:
            type: string
            format: date-time
          lastUpdatedAt:
            type: string
            format: date-time
          lastUpdatedBy:
            type: string
            maxLength: 255
    Upload_Methods:
      description: Upload methods is an array with 2 possible items (file, camera).
      type: array
      minItems: 1
      maxItems: 2
      uniqueItems: true
      items:
        type: string
        enum:
        - file
        - camera
        - url
    Request_Base:
      type: object
      properties:
        clientOrganizationId:
          type: string
          maxLength: 255
        externalId:
          type: string
          maxLength: 255
          description: ID that can be provided by customers (external) in order to
            later be used for fetching
        consumerId:
          type: string
          maxLength: 255
          description: An existing consumer (this field and 'consumer' field are mutually
            exclusive), when both supplied 'consumer' is ignored
        consumer:
          description: A new consumer to be created for this request (this field and
            'consumerId' are mutually exclusive), when both supplied this is ignored
          $ref: '#/components/schemas/Consumer_For_Create'
        requestTypes:
          description: Request types is an object including keys for each front side
            of the ID, back side, or a selfie image for face comparison. the value
            is an array of upload methods (see                                                                                                                                                 #/components/schemas/Upload_Methods)
          type: object
          properties:
            idFront:
              $ref: '#/components/schemas/Upload_Methods'
            idBack:
              $ref: '#/components/schemas/Upload_Methods'
            faceCompare:
              $ref: '#/components/schemas/Upload_Methods'
            faceCompare2:
              $ref: '#/components/schemas/Upload_Methods'
            poa:
              $ref: '#/components/schemas/Upload_Methods'
        locale:
          type: string
          format: locale
          example: en-US
          description: Language locale in which the Secure.Me page will be displayed
            in
        country:
          type: string
          example: USA
          maxLength: 3
          minLength: 3
          description: 3-letter country code according to ISO 3166-1 standard
        successRedirectUrl:
          type: string
          format: uri
          description: Redirect URL that the secure.me page would redirect to when
            the session has ended successfuly.
          example: https://example.com/success
        errorRedirectUrl:
          type: string
          format: uri
          description: Redirect URL that the secure.me page would redirect to when
            the session has ended with errors.
          example: https://example.com/Error
        mobileSuccessRedirectUrl:
          type: string
          format: uri
          description: Redirect URL that the secure.me page would redirect to when
            the session has ended with errors.
          example: https://example.com/Error
        mobileErrorRedirectUrl:
          type: string
          format: uri
          description: Redirect URL that the secure.me page would redirect to when
            the session has ended with errors.
          example: https://example.com/Error
        mobileRedirectBehavior:
          type: string
          enum:
          - never
          - always
          - alwaysInDesktopToMobileFlow
          - neverInDesktopToMobileFlow
        processRequestTypes:
          type: array
          minItems: 1
          items:
            type: string
            enum:
            - idFront
            - idBack
            - faceCompare
            - poa
        callbackUrl:
          type: string
          format: uri
          description: Webhook to call with the final processing result.
          example: https://example.com/api/resultCallback
        callbackHeaders:
          type: object
          description: Headers to attache the webhook request.
          example: {Authorization: sadjfhkahfwer#$%}
        processingFlow:
          type: string
          enum:
          - idv
          - poa
          - face2face
          - edv
          - nfc
        comparisonData:
          description: Comparison data received from a customer for comparison between
            primary id or POA
          $ref: '#/components/schemas/ComparisonData'
        assetUrls:
          description: An optional way for the user to upload their photos
          $ref: '#/components/schemas/Assets_Urls_Options'
    Request_For_Create:
      description: Create request under an organization, for an existing / new consumer
      allOf:
      - $ref: '#/components/schemas/Request_Base'
      - type: object
        properties:
          generateLink:
            type: boolean
            default: true
          doubleCheckDirective:
            type: string
            enum:
            - None
            - SendDirectly
            - SkipSending
          sendSms:
            type: boolean
            description: Whether to send SMS to the consumer supplied phoneNumber
              or not. Default = false.
          shortUrl:
            type: boolean
            default: false
    Request_Link:
      type: object
      properties:
        token:
          type: string
        expiredAt:
          type: string
          format: date-time
        redeemedAt:
          type: string
          format: date-time
        url:
          type: string
          format: uri
    Request_With_Result:
      description: The result part of the request
      type: object
      properties:
        image:
          type: object
          properties:
            uri:
              type: string
              format: uri
            accessToken:
              type: string
        country:
          type: string
        documentType:
          type: string
        processingResult:
          type: integer
    Upload_Images_Data:
      description: The images data part of the response
      type: object
      properties:
        isSanitizedSuccess:
          type: boolean
        isThreatsFound:
          type: boolean
        originalImages:
          type: array
          description: array of original images data
          items:
            type: object
            properties:
              mimeType:
                type: string
              subType:
                type: string
              uploadType:
                type: string
              avStatus:
                type: string
              size:
                type: integer
        sanitizedImages:
          type: array
          description: array of cdr images
          items:
            type: object
            properties:
              isThreatFound:
                type: boolean
              mimeType:
                type: string
              subType:
                type: string
              uploadType:
                type: string
              uri:
                type: string
    Request:
      allOf:
      - $ref: '#/components/schemas/Request_Base'
      - $ref: '#/components/schemas/Request_With_Result'
      - $ref: '#/components/schemas/Upload_Images_Data'
      - type: object
        description: Document Processing Request
        properties:
          id:
            description: ID of the client request
            type: string
            maxLength: 255
          documentProcessingRequestId:
            description: ID of the processing request in the document processing service
            type: string
          createdAt:
            type: string
            format: date-time
          lastUpdatedAt:
            type: string
            format: date-time
          createdById:
            type: string
            maxLength: 255
          createdByType:
            type: string
            enum:
            - api
            - user
          uploadBy:
            type: string
            enum:
            - Api
            - SecureMe
            - Console
            - MobileDebug
            - MobileDemo
          capturedBy:
            type: string
            enum:
            - MobileSDK
            - WebSDK
          link:
            $ref: '#/components/schemas/Request_Link'
    Application:
      type: object
      properties:
        clientId:
          type: string
        publicKeys:
          type: array
          description: array of public keys and their ids (objects).
          items:
            type: object
            properties:
              id:
                type: string
                maxLength: 255
              publicKey:
                type: string
    ComparisonData:
      type: object
      properties:
        address:
          type: string
          maxLength: 255
        residentialAddress:
          type: string
          maxLength: 255
        firstName:
          type: string
          maxLength: 100
        lastName:
          type: string
          maxLength: 100
        middleNames:
          type: string
          maxLength: 100
        dateOfBirth:
          type: string
          format: date-time
        dateOfExpiry:
          type: string
          format: date-time
        dateOfIssue:
          type: string
          format: date-time
        countryIso3:
          type: string
          maxLength: 3
        nationalityIso3:
          type: string
          maxLength: 3
        documentNumber:
          type: string
          maxLength: 100
        personalNumber:
          type: string
          maxLength: 100
        phoneNumber:
          type: string
          maxLength: 100
        imageSource:
          type: string
          maxLength: 255
        socialSecurityNumber:
          type: string
          maxLength: 255
        isDataExtractionOnly:
          type: boolean
        gender:
          enum:
          - male
          - female
        postcode:
          type: string
          maxLength: 10
    Assets_Urls_Options:
      description: Upload methods is an array with 2 possible items (file, camera).
      type: object
      properties:
        idFront:
          $ref: '#/components/schemas/Assets_Props'
        idBack:
          $ref: '#/components/schemas/Assets_Props'
        faceCompare:
          $ref: '#/components/schemas/Assets_Props'
        faceCompare2:
          $ref: '#/components/schemas/Assets_Props'
        poa:
          $ref: '#/components/schemas/Assets_Props'
    Assets_Props:
      type: object
      additionalProperties: false
      required: [url]
      properties:
        url:
          type: string
          format: url
        headers:
          type: object
    attachments_response:
      description: Attachments response array
      type: array
      properties:
        attachments:
          $ref: '#/components/schemas/attachment_response'
    delete_sessions:
      description: list of sessions to delete
      type: array
      minItems: 1
      uniqueItems: true
      items:
        type: string
    attachment_response:
      description: attachment response object
      type: object
      properties:
        type:
          type: string
        sasTokenUri:
          type: string
        mimeType:
          type: string
      example:
        type: thumbnail
        sasTokenUri: https://mediastorage.blob.core.windows.net/ms-8/input_ABCDEFGHIJKMNLOP_page0_thumbnail.jpeg?params_for_token
        mimeType: image/jpeg
    asset_response:
      description: asset response object
      type: object
      properties:
        assetId:
          type: integer
        createdAt:
          type: string
        status:
          type: string
        type:
          type: string
        subType:
          type: string
        mimeType:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/attachment_response'
        processedBy:
          type: string
        sasTokenUri:
          type: string
      example:
        assetId: 11
        createdAt: '2021-06-19T11:07:42.200Z'
        status: created
        type: page0
        mimeType: image/jpeg
        attachments: []
        sasTokenUri: https://mediastorage.blob.core.windows.net/ms-8/input_ABCDEFGHIJKMNLOP_page0.jpeg?params_for_token
    session_response:
      description: session response object
      type: object
      properties:
        organizationId:
          type: integer
        ventureId:
          type: string
        sessionId:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/asset_response'
      example:
        organizationId: 326
        ventureId:
        sessionId: ABCDEFGHIJKMNLOP
        assets: []
    sessions_response:
      description: response of array of sessions
      type: array
      items:
        $ref: '#/components/schemas/session_response'
    change_policy:
      description: change policy
      type: object
      properties:
        retentionPeriod:
          type: integer
      required:
      - retentionPeriod
    sessions_response_error:
      schema:
      type: object
      properties:
        message:
          type: string
    sessions_unexpected_error:
      schema:
      type: object
      properties:
        message:
          type: string
    update_attachments:
      description: update asset
      type: array
      minItems: 1
      items:
        type: object
        properties:
          organizationId:
            type: integer
          ventureId:
            type: string
          sessionId:
            type: string
          type:
            type: string
            enum: [page0, page1, ff1, ff2, supp, barcode, chip, edv, iddata, pdata,
              photo, sdp, aflvid, pflvid, chipdg01, chipdg02, chipdg07]
          subType:
            type: string
          attachmentType:
            type: string
          processedBy:
            type: string
            enum: [cdr, bos]
          status:
            type: string
            enum: [created, uploaded, pending, unsafe, safe]
        required:
        - organizationId
        - sessionId
        - type
        - processedBy
        - attachmentType
        - status
    update_assets:
      oneOf:
      - $ref: '#/components/schemas/update_asset'
      - $ref: '#/components/schemas/update_asset_by_id'
    update_asset_by_id:
      description: update asset
      type: array
      items:
        type: object
        properties:
          organizationId:
            type: integer
          ventureId:
            type: string
          sessionId:
            type: string
          assetId:
            type: string
          type:
            type: string
            enum: [page0, page1, ff1, ff2, supp, barcode, chip, edv, iddata, pdata,
              photo, sdp, aflvid, pflvid, chipdg01, chipdg02, chipdg07]
          subType:
            type: string
          status:
            type: string
            enum: [created, uploaded, pending, unsafe, safe]
          mimeType:
            type: string
          processedBy:
            type: string
            enum: [original, bos, cdr]
          blobSize:
            type: integer
          dataId:
            type: string
          avResult:
            type: string
        required:
        - assetId
        - status
    update_asset:
      description: update asset
      type: array
      items:
        type: object
        properties:
          organizationId:
            type: integer
          ventureId:
            type: string
          sessionId:
            type: string
          assetId:
            type: integer
          type:
            type: string
            enum: [page0, page1, ff1, ff2, supp, barcode, chip, edv, iddata, pdata,
              photo, sdp, aflvid, pflvid, chipdg01, chipdg02, chipdg07]
          subType:
            type: string
          status:
            type: string
            enum: [created, uploaded, pending, unsafe, safe]
          mimeType:
            type: string
          processedBy:
            type: string
            enum: [original, bos, cdr]
          blobSize:
            type: integer
          dataId:
            type: string
          avResult:
            type: string
        required:
        - organizationId
        - sessionId
        - type
        - processedBy
        - status
    create_asset:
      description: create asset
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum: [page0, page1, ff1, ff2, supp, barcode, chip, edv, iddata, pdata,
              photo, aflvid, pflvid, chipdg01, chipdg02, chipdg07]
          mimeType:
            type: string
            enum:
            - application/json
            - application/pdf
            - application/octet-stream
            - image/jpeg
            - image/gif
            - image/bmp
            - image/png
            - video/mp4
            - video/mpeg
            - audio/mpeg
            - audio/wav
            - text/plain
          subType:
            type: string
            description: subType can be only a-z, A-Z and 0-9 characters
            pattern: ^[a-zA-Z0-9]*$
          processedBy:
            enum: [cdr, original, bos]
        required:
        - type
    create_attachment:
      description: create attachments
      type: array
      items:
        type: object
        properties:
          assetId:
            type: string
          type:
            type: string
            enum: [thumbnail, fullHD]
          mimeType:
            type: string
            enum:
            - application/json
            - application/pdf
            - application/octet-stream
            - image/jpeg
            - image/gif
            - image/bmp
            - image/png
            - video/mp4
            - video/mpeg
            - audio/mpeg
            - audio/wav
            - text/plain
        required:
        - type
        - assetId
